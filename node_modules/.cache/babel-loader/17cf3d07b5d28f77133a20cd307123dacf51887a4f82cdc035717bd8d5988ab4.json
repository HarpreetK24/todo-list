{"ast":null,"code":"var _jsxFileName = \"/Users/harpreetkamboj/Desktop/todo-list/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const addTask = taskText => {\n    if (taskText.trim() !== '') {\n      setTasks([...tasks, taskText]);\n      setNewTask('');\n    } else {\n      alert('Please enter something.');\n    }\n  };\n  const clearAllTasks = () => {\n    setTasks([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: () => addTask(newTask),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n        text: task,\n        tasks: tasks,\n        setTasks: setTasks,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clear-button\",\n      onClick: clearAllTasks,\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTask","setNewTask","addTask","taskText","trim","alert","clearAllTasks","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","index","text","_c","$RefreshReg$"],"sources":["/Users/harpreetkamboj/Desktop/todo-list/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Task from './Task';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  const addTask = (taskText) => {\n    if (taskText.trim() !== '') {\n      setTasks([...tasks, taskText]);\n      setNewTask('');\n    } else {\n      alert('Please enter something.');\n    }\n  };\n\n  const clearAllTasks = () => {\n    setTasks([]);\n  };\n\n  return (\n    <div className=\"task-list\">\n      <div className=\"input-section\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button className='add-btn' onClick={() => addTask(newTask)}>Add</button>\n      </div>\n      <ul>\n        {tasks.map((task, index) => (\n          <Task\n            key={index}\n            text={task}\n            tasks={tasks}\n            setTasks={setTasks}\n            index={index}\n          />\n        ))}\n      </ul>\n      <button className=\"clear-button\" onClick={clearAllTasks}>\n        Clear All\n      </button>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,OAAO,GAAIC,QAAQ,IAAK;IAC5B,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,QAAQ,CAAC,CAAC;MAC9BF,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACLI,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BP,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bb,OAAA;QACEc,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BC,KAAK,EAAEX,OAAQ;QACfY,QAAQ,EAAGC,CAAC,IAAKZ,UAAU,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFvB,OAAA;QAAQY,SAAS,EAAC,SAAS;QAACY,OAAO,EAAEA,CAAA,KAAMjB,OAAO,CAACF,OAAO,CAAE;QAAAQ,QAAA,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACNvB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB3B,OAAA,CAACF,IAAI;QAEH8B,IAAI,EAAEF,IAAK;QACXvB,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA,QAAS;QACnBuB,KAAK,EAAEA;MAAM,GAJRA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLvB,OAAA;MAAQY,SAAS,EAAC,cAAc;MAACY,OAAO,EAAEb,aAAc;MAAAE,QAAA,EAAC;IAEzD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5CID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}